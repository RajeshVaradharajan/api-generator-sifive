tuple Resource =
  global Name: String

tuple DUT =
  global Name:         String
  global Configs:      List String
  global ObjectModel:  JValue
  global Vsrcs:        List Path   # just call this sources
  global TopModule:    String
  global BlackBoxes:   List String
  #global Missing:     List Resource
  global DTS:          Path
  global DTSJSON:      Path # JSON version of DTS
  global FPGABoardOpt: Option String
  global Sources:      List Path
  global ObjectModelFile: Path

global def makeDUT name configs objectModel vsrcs topModule missing dts dtsJSON board =
  def omFile =
    objectModel
    | prettyJSON
    | write "build/api-generator-sifive/{name}/programs/omfile.json"
  DUT name configs objectModel vsrcs topModule missing dts dtsJSON board Nil omFile

global def sourcesInDUT regex dut =
  dut.getDUTSources
  | filter (matches regex _.getPathName)

tuple TestDriver =
  global Name:         String
  global TopModule:    String
  global FObjectModel: JValue => JValue
  global Vsrcs:        List Path

global def makeTestDriver = TestDriver _ _ _ _

def testDriverObjectModel td dut =
  def fields =
    Pair "name"  td.getTestDriverName.JString,
    Pair "model" dut.getDUTTopModule.JString,
    Nil
  JObject fields

def addField name field = match _
  JArray tail = JArray (JObject (Pair name field, Nil), tail)
  JObject fields = JObject (Pair name field, fields)
  other = other

def testDriverJName = `TestDriver`
global def getDUTTestDriverName = getTestDriverField `name`
global def getDUTTestDriverModel = getTestDriverField `model`

def getTestDriverField field dut =
  def query = dut.getDUTObjectModel // testDriverJName // field
  match query
    JArray (JString model, _) = Some model
    _                        = None

global def addDUTTestDriver testDriver dut =
  def testDriverJValue =
    testDriverObjectModel testDriver dut
    | testDriver.getTestDriverFObjectModel
  dut
  | setDUTTopModule testDriver.getTestDriverTopModule
  | editDUTVsrcs (testDriver.getTestDriverVsrcs ++ _)
  | editDUTObjectModel (addField (regExpToString testDriverJName) testDriverJValue)
